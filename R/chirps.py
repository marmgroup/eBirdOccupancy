# -*- coding: utf-8 -*-
"""chirps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c2DV-ljzfPi5ybR-ebWYnYhTEfF0Nrhw
"""

#!/usr/bin/env python
# coding: utf-8

import subprocess

try:
    import geemap
except ImportError:
    print('geemap package not installed. Installing ...')
    subprocess.check_call(["python", '-m', 'pip', 'install', 'geemap'])

# Checks whether this notebook is running on Google Colab
try:
    import google.colab
    import geemap.eefolium as geemap
except:
    import geemap

# Authenticates and initializes Earth Engine
import ee

try:
    ee.Initialize()
except Exception as e:
    ee.Authenticate()
    ee.Initialize()

# GET DATA
# SWG extent
table = ee.FeatureCollection("users/pratik_unterwegs/wg_extent");

# get chirps pentad data
chirps = chirps = ee.ImageCollection('UCSB-CHG/CHIRPS/PENTAD')

# FUNCTION TO FILTER ON WINTER DATA AND GET VARIANCE
# for each year, go to the december of the year before and get 6 months


def variance_winter_chirps(year):
    year_start = int(year) - 1
    month_start = 12
    start_date = ee.Date.fromYMD(year_start, month_start, 1)
    end_date = start_date.advance(6, 'month')
    filtered_chirps = chirps.filter(ee.Filter.date(start_date, end_date))
    variance_chirps = filtered_chirps.reduce(ee.Reducer.variance())
    return variance_chirps


# ends here

# FILTER DATA
# get year range
years = list(range(2013, 2020))

# filter data
var_winter_chirps = list(map(variance_winter_chirps, years))

# make image collection
var_winter_chirps = ee.ImageCollection.fromImages(
    var_winter_chirps
)

# GET MEAN FOR WG EXTENT
mean_chirps_var = var_winter_chirps.reduce(ee.Reducer.mean()).clip(table)

sld_ramp = \
  '<RasterSymbolizer>' + \
    '<ColorMap type="ramp" extended="false" >' + \
      '<ColorMapEntry color="#0D0887" quantity="0" label="0"/>' + \
      '<ColorMapEntry color="#CC4678" quantity="100" label="300" />' + \
      '<ColorMapEntry color="#F0F921" quantity="200" label="500" />' + \
    '</ColorMap>' + \
  '</RasterSymbolizer>';

# VISUALISE LAYERS
Map = geemap.Map(center=[10.0005,78], zoom=6)
Map.addLayer(table)
Map.addLayer(mean_chirps_var.sldStyle(sld_ramp), {})

Map

# EXPORT OUTPUT
import os
out_dir = os.path.join(os.path.expanduser('~'), 'Downloads')
filename = os.path.join(out_dir, 'chirps.tif')

geemap.ee_export_image(mean_chirps_var, filename=filename, scale=5000, region=table.geometry(), file_per_band=True)